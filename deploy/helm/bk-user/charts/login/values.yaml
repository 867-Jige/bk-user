global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  imagePullSecrets: []
  storageClass: ""

  ## 蓝鲸产品统一根域
  bkDomain: "example.com"
  bkDomainScheme: "http"
  ## --------------
  ## 蓝鲸监控
  ## --------------
  serviceMonitor:
    ## @param serviceMonitor.enabled Creates a ServiceMonitor to monitor kube-state-metrics
    ##
    enabled: false
    ## @param serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
    ##
    jobLabel: ""
    ## @param serviceMonitor.interval Scrape interval (use by default, falling back to Prometheus' default)
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## interval: 10s
    ##
    interval: ""
    ## @param serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## scrapeTimeout: 10s
    ##
    scrapeTimeout: ""
    ## @param serviceMonitor.selector ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ## e.g:
    ## selector:
    ##   prometheus: my-prometheus
    ##
    selector: {}
    ## @param serviceMonitor.honorLabels Honor metrics labels
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ## e.g:
    ## honorLabels: false
    ##
    honorLabels: false
    ## @param serviceMonitor.relabelings ServiceMonitor relabelings
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    relabelings: []
    ## @param serviceMonitor.metricRelabelings ServiceMonitor metricRelabelings
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#relabelconfig
    ##
    metricRelabelings: []

  ## --------------
  ## 蓝鲸日志采集
  ## --------------
  bkLogConfig:
    enabled: false
    dataId: 1

## web deployment 副本数
replicaCount: 1
## celery deployment 副本数
celeryReplicaCount: 1

appCode: "bk_login"
appSecret: ""

# 与 ESB 的通信凭证，应用(bk_paas) 对应的 bk_app_secret
bkPaasSerectKey: ""
# 32位随机字符串，用于加密登录态票据(bk_token)
encryptSecretKey: ""
## 统一登录的外部访问域名
bkPaas3Addr: paas.example.com
## 蓝鲸用户管理后台 API 地址
bkUserApiUrl: http://bkuserapi-web

image:
  registry: mirrors.tencent.com
  repository: blueking/bk-login
  pullPolicy: IfNotPresent
  tag: "1.0.0-beta.4"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  ## Specifies whether a service account should be created
  create: true
  ## Annotations to add to the service account
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  name: ""

## ---------------
## 环境变量
## ---------------
## 请按照原生 env 格式填写
## env 优先级高于 envFrom，你可以用它来覆盖内置环境变量
# env:
#   - key: "FOO"
#     value: "BAR"

envFrom:
  - configMapRef:
      name: bk-login-general-envs
  - configMapRef:
      name: bk-login-external-storage

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
    - host: "{{ .Values.bkPaas3Addr }}"
      paths:
        - path: "/login(/|$)(.*)"
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 200m
    memory: 1024Mi
  requests:
    cpu: 200m
    memory: 512Mi

celeryResource:
  limits:
    cpu: 1024m
    memory: 2048Mi
  requests:
    cpu: 100m
    memory: 128Mi

## ---------------
## 调度
## ---------------
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## --------------
## 外部数据库配置
## --------------
preferDBName: "bk_login"
externalDatabase:
  default:
    host: ""
    password: ""
    port: 3306
    user: ""
    name: "bk_login"

## ---------------
## 外部 Redis
## ---------------
externalRedis:
  default:
    host: ""
    port: 6379
    password: ""

## --------------
## 检查 DB 变更
## --------------
migration:
  images:
    busybox:
      registry: "mirrors.tencent.com"
      repository: blueking/busybox
      tag: "1.34.0"
    k8sWaitFor:
      registry: "mirrors.tencent.com"
      repository: blueking/k8s-wait-for
      tag: "v1.5.1"
